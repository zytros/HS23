theory Protocol2
begin

/* ----------------- */
/* Equational theory */
/* ----------------- */

/* Load the built-in encryption theories */
//Do not change the following line, i.e. do not add, change or remove anything (not even comments) in the following line.
builtins: symmetric-encryption, asymmetric-encryption

/* ---------------- */
/* Public Key Setup */
/* ---------------- */

/* The following rule should be annotated by the following action facts: 
- PubKey($A, ~ska)
*/
rule PubKey:  
/*FILL IN HERE*/

[Fr(~ska)]
--[PubKey($A, ~ska)]->
[!St_pk($A, pk(~ska), $B), !St_sk($B, ~ska), Out(pk(~ska))]

/* -------------- */
/* Protocol rules */
/* -------------- */
/* The following rule should be annotated by the following action facts: 
- AliceSends($A, $B, ~ma, ~kAB, pkB)
*/
rule AliceSends:
/*FILL IN HERE*/

[Fr(~kAB), Fr(~ma), !St_pk($A, pkB, $B),]
--[ AliceSends($A, $B, ~ma, ~kAB, pkB), 
    RunningA($A, $B, ~ma),
    ]->
[ Out(<$A, aenc(~kAB, pkB), senc(~ma, ~kAB)>), St_A_send($A, $B, ~kAB, ~ma)]

/* The following rule should be annotated by the following action facts: 
- BobReceived($B, $A, ~mb, ma, kAB, ~skb)
*/
rule BobReceivesAndSends:
/*FILL IN HERE*/
let
kAB = adec(msg_k, ~skb)
ma = sdec(msg_enc, kAB)
in

[Fr(~mb), !St_sk($B, ~skb), In(<$A, msg_k, msg_enc>)]
--[ BobReceived($B, $A, ~mb, ma, kAB, ~skb), 
    FinishedB($B, $A, ma, ~mb), 
    SecretB(~mb),
    RunningB($B, $A, ~mb),
    CommitB($B, $A, ma),
    ]->
[Out(senc(~mb, kAB)), St_Brec_send($A, $B, kAB, ma, ~mb)]

/* The following rule should be annotated by the following action facts: 
- AliceReceives($A, $B, ~ma, mb, ~kAB)
*/
rule AliceReceives:
/*FILL IN HERE*/
let mb = sdec(msg, ~kAB) in
[In(msg), St_A_send($A, $B, ~kAB, ~ma)]
--[ AliceReceives($A, $B, ~ma, mb, ~kAB), 
    FinishedA($A, $B, ~ma, mb),
    SecretA(~ma),
    CommitA($A, $B, mb),
    ]->
[]




/* ---------- */
/* Properties */
/* ---------- */

/* Executability check: */
//Make sure to add the action facts referred to by this lemma in your model
//Do not change this lemma, i.e. do not add, change or remove anything (not even comments) in the following three lines.
lemma executable:
exists-trace "Ex #i #j A B ma mb.
FinishedA(A, B, ma, mb)@i & FinishedB(B,A,ma,mb)@j& not (A=B)"
 
//un-comment following line for Task 1.3
lemma secrecyA:
/*FILL IN HERE: 
You may only use the action facts SecretA, SecretB, and K to formulate this lemma.*/
"All ma #i. SecretA(ma)@i ==> not (Ex #j. K(ma)@j)"

//un-comment following line for Task 1.3
lemma secrecyB:
/*FILL IN HERE: 
You may only use the action facts SecretA, SecretB, and K to formulate this lemma.*/
"All mb #i. SecretB(mb)@i ==> not (Ex #j. K(mb)@j)"

//un-comment following line for Task 1.4
lemma non_injectiveA:
/*FILL IN HERE: 
You may only use the action facts CommitA, CommitB, RunningA, and RunningB to formulate this lemma.*/
"All A B t #i.
    CommitA(A,B,t) @i
    ==> (Ex #j. RunningB(B,A,t) @j)"

//un-comment following line for Task 1.4
lemma non_injectiveB:
/*FILL IN HERE: 
You may only use the action facts CommitA, CommitB, RunningA, and RunningB to formulate this lemma.*/
"All A B t #i.
    CommitB(B,A,t) @i
    ==> (Ex #j. RunningA(A,B,t) @j)"


end
